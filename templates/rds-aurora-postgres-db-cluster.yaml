AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation Template to create Aurora Postgresql Cluster DB Instance'
###############################################################################
# Parameter groups
###############################################################################
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: DB Parameters
        Parameters:
          - DBName
          - DBPort
          - DBUsername
          - DBInstanceClass
          - DBEngineVersion
          - DBSnapshotId
          - DBSubnetIds
          - DBExportLogToCloudwatch
          - NotificationList
          - LambdaBootStrapS3Bucket
          - LambdaBootStrapS3Key
      - Label:
          default: Networking
        Parameters:
          - VpcId
          - PrefixListId
          - ClusterSecurityGroupDescription
      - Label:
          default: Mandatory Tags
        Parameters:
          - EnvironmentId
          - ProjectId
          - ProjectIdVersion        
          - Contact
          - CostCenter  
          - Confidentiality
          - Compliance
    ParameterLabels:
      DBName:
        default: Database Name
      DBSnapshotId:
        default: Database Snapshot ID
      DBEngineVersion:
        default: Database Engine Version
      DBExportLogToCloudwatch:
        default: Export Database Log to Cloudwatch
      DBInstanceClass:
        default: Database Instance Class
      DBPort:
        default: Database Port
      DBSubnetIds:
        default: List of subnet IDs for inclusion in DB subnet group
      VpcId:
        default: VPC in which to deploy security groups
      PrefixListId:
        default: Prefix List ID
      ClusterSecurityGroupDescription:
        default: Cluster Security Group Description
      NotificationList:
        default: SNS notification email
      EnvironmentId:
        default: Environment ID
      ProjectId:
        default: ProjectId Name
      ProjectIdVersion:
        default: ProjectId Version 
      Compliance:
        default: Compliance Classifier
      Confidentiality:
       default: Confidentiality Classifier
      CostCenter:
       default: Cost Center
###############################################################################
# Parameters 
###############################################################################
Parameters:
  VpcId:
    Description: VPC in which to deploy security groups
    Type: AWS::EC2::VPC::Id
  PrefixListId:
    Description: Prefix List ID used in Cluster Security Group
    Type: String
    Default: <prefixlistid>
  DBName:
    Description: Database Name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: "^[a-zA-Z]+[0-9a-zA-Z_]*$" 
    ConstraintDescription: Must start with a letter. Only numbers, letters, and _ accepted. max length 64 characters 
  DBPort:
    Description: TCP/IP Port for the Database Instance
    Type: Number
    Default: 5432
    ConstraintDescription: 'Must be in the range [1115-65535]'
    MinValue: 1115
    MaxValue: 65535
  DBUsername:
    Description: Database master username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: "^[a-zA-Z]+[0-9a-zA-Z_]*$"
    ConstraintDescription: Must start with a letter. Only numbers, letters, and _ accepted. max length 16 characters
  DBEngineVersion:
    Description: Select Database Engine Version
    Type: String
    Default: 12.4
    AllowedValues:
      - 10.11
      - 10.12
      - 10.13
      - 10.14
      - 11.6
      - 11.7
      - 11.8
      - 11.9
      - 12.4
      - 12.6
      - 12.7
      - 12.8
      - 12.9
      - 13.3
      - 13.4
      - 13.5
  DBInstanceClass:
    Default: db.t3.large
    Description: Database Instance Class. The db.r5 instance classes are supported for Aurora PostgreSQL 10.6 or later. The db.t3.medium instance class is supported for Aurora PostgreSQL 10.7 or later. The db.r6g classes are supported for Aurora PostgreSQL 11.9 and 12.4.
    Type: String
    AllowedValues:
    - db.t3.medium
    - db.t3.large
    - db.r5.large
    - db.r5.xlarge
    - db.r5.2xlarge
    - db.r5.4xlarge
    - db.r5.8xlarge
    - db.r5.12xlarge
    - db.r5.16xlarge
    - db.r5.24xlarge
    - db.r6g.large
    - db.r6g.xlarge
    - db.r6g.2xlarge
    - db.r6g.4xlarge
    - db.r6g.8xlarge
    - db.r6g.12xlarge
    - db.r6g.16xlarge
  DBSnapshotId:
    Description: Optional. DB Snapshot ID to restore database. Leave this blank if you are not restoring from a snapshot.
    Type: String
    Default: ""
  DBExportLogToCloudwatch:
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: Whether or not to export Database logs to Cloudwatch
    Type: String
  DBSubnetIds:
    Description: RDS Aurora Cluster Subnet IDs for Subnet Group
    Type: List<AWS::EC2::Subnet::Id>
  ClusterSecurityGroupDescription:
    Type: String
    Default: Allows access to required application ports on the Aurora cluster.
  LambdaBootStrapS3Bucket:
    Description: Optional. Specify S3 bucket name for e.g. apgbootstrapscripts where Lambda DB Bootstrap Python script is stored.
    Default: ''
    Type: String
  LambdaBootStrapS3Key:
    Description: Optional. Specify S3 key for e.g. lambda/dbbootstrap.zip where Lambda DB Bootstrap Python script is stored.
    Default: ''
    Type: String
###########################################################################
# Mandatory tags that will be added to all resources that support tags
###########################################################################
  EnvironmentId:
    Type: String
    Description: The environment tag is used to designate the Environment Stage of the associated AWS resource.
    Default: dev
    AllowedValues:
      - dev
      - test
      - stage
      - prod
  ProjectId:
    Type: String
    Description: The ProjectId tag is used to designate the application of the associated AWS resource. In this capacity application does not refer to an installed software component, but rather the overall business application that the resource supports.
  ProjectIdVersion:
    Type: String
    Description: The ProjectIdVersion tag is used to designate the specific version of the application. Format should be in the Pattern - "#.#.#"
    Default: '1.0.0'
    AllowedPattern: '^[a-zA-Z0-9\.\-]+$'
    ConstraintDescription: provide a valid application version
  CostCenter:
    Type: String
    Description: The CostCenter tag is used to designate the cost center associated with the project of the given AWS resource.
    Default: 0000
    AllowedPattern: "^[a-zA-Z0-9]+$"
    ConstraintDescription:  provide a valid cost center
  Contact:
    Type: String
    Description: The Contact tag is used to designate business owner(s) email address associated with the given AWS resource for sending outage or maintenance notifications
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: provide a valid email address.
  NotificationList:
    Type: String
    Description: The Email notification list is used to configure a SNS topic for sending cloudwatch alarm and RDS Event notifications
    Default: user@domain.com
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: provide a valid email address.
  Confidentiality:
    Type: String
    Description: The Confidentiality tag is used to designate the confidentiality classification of the data that is associated with the resource.
    Default: private
    AllowedValues:
      - public
      - private
      - confidential
      - pii/phi
  Compliance:
    Type: String
    Description: The Compliance tag is used to specify the Compliance level for the AWS resource.
    Default: other
    AllowedValues:
      - hipaa
      - sox
      - fips
      - gxp
      - other
      - none
###############################################################################
# Mappings
###############################################################################
Mappings: 
  DBFamilyMap: 
    "10.11":
      "family": "aurora-postgresql10"
    "10.12":
      "family": "aurora-postgresql10"
    "10.13":
      "family": "aurora-postgresql10"
    "10.14":
      "family": "aurora-postgresql10"
    "11.6":
      "family": "aurora-postgresql11"
    "11.7":
      "family": "aurora-postgresql11"
    "11.8":
      "family": "aurora-postgresql11"
    "11.9":
      "family": "aurora-postgresql11"
    "12.4":
      "family": "aurora-postgresql12"
    "12.6":
      "family": "aurora-postgresql12"
    "12.7":
      "family": "aurora-postgresql12"
    "12.8":
      "family": "aurora-postgresql12"
    "12.9":
      "family": "aurora-postgresql12"
    "13.3":
      "family": "aurora-postgresql13"
    "13.4":
      "family": "aurora-postgresql13"
    "13.5":
      "family": "aurora-postgresql13"
###############################################################################
# Conditions
############################################################################### 
Conditions:
  IsUseDBSnapshot: !Not [!Equals [!Ref DBSnapshotId, ""]]
  IsNotUseDBSnapshot: !Not [Condition: IsUseDBSnapshot]
  IsProd: !Equals [!Ref EnvironmentId, 'prod']
  IsReplica: !Or [!Equals [!Ref EnvironmentId, 'stage'], Condition: IsProd]
  DoDBBootStrap: !And
    - !Not [!Equals [!Ref LambdaBootStrapS3Bucket, '']]
    - !Not [!Equals [!Ref LambdaBootStrapS3Key, '']]
    - !Not [Condition: IsUseDBSnapshot]
  DoEnableIAM: !Not [!Equals [!Ref DBEngineVersion, '9.6.8']]
  EnableDBLogExport: !Equals [!Ref DBExportLogToCloudwatch, "true"]
###############################################################################
# Resources 
###############################################################################
Resources:
  MonitoringIAMRole: 
    Type: AWS::IAM::Role
    Condition: IsProd
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "monitoring.rds.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
  DBBootStrapLambdaRole:
    Type: AWS::IAM::Role
    Condition: DoDBBootStrap
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: 
              - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole'
      Policies:
        - 
          PolicyName: "secretaccess"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: "secretsmanager:GetSecretValue"
                Resource: !Ref AuroraMasterSecret
  DBSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: !Ref NotificationList
        Protocol: email
  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: !Ref 'AWS::StackName'
      SubnetIds: !Ref DBSubnetIds
  ClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref ClusterSecurityGroupDescription
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-sg
      VpcId: !Ref VpcId
  ClusterSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      GroupId: !Ref ClusterSecurityGroup
      SourcePrefixListId: !Ref PrefixListId
      FromPort: !Ref DBPort
      ToPort: !Ref DBPort
  RDSDBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Join [ "- ", [ "Aurora PG Cluster Parameter Group for  Cloudformation Stack ", !Ref DBName ] ]
      Family: !FindInMap [DBFamilyMap, !Ref DBEngineVersion, "family"] 
      Parameters:
        rds.force_ssl: 0
  DBParamGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Join [ "- ", [ "Aurora PG Database Instance Parameter Group for Cloudformation Stack ", !Ref DBName ] ]
      Family: !FindInMap [DBFamilyMap, !Ref DBEngineVersion, "family"] 
      Parameters:
        log_rotation_age: '1440'
        log_rotation_size: '102400'
  AuroraMasterSecret:
    Condition: IsNotUseDBSnapshot
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Join ['/', [!Ref EnvironmentId, 'aurora-pg', !Ref 'AWS::StackName']]
      Description: !Join ['', ['Aurora PostgreSQL Master User Secret ', 'for CloudFormation Stack ', !Ref 'AWS::StackName']]
      Tags:
        -
          Key: EnvironmentId
          Value: !Ref EnvironmentId
        -
          Key: DatabaseEngine
          Value: 'Aurora PostgreSQL'
        -
          Key: StackID
          Value: !Ref 'AWS::StackId'
      GenerateSecretString:
        SecretStringTemplate: !Join ['', ['{"username": "', !Ref DBUsername, '"}']]
        GenerateStringKey: "password"
        ExcludeCharacters: '"@/\'
        PasswordLength: 16
  SecretAuroraClusterAttachment:
    Condition: IsNotUseDBSnapshot
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref AuroraMasterSecret
      TargetId: !Ref AuroraDBCluster
      TargetType: AWS::RDS::DBCluster
  AuroraSecretResourcePolicy:
    Condition: IsNotUseDBSnapshot
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      SecretId: !Ref AuroraMasterSecret
      ResourcePolicy:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Deny"
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "secretsmanager:DeleteSecret"
            Resource: "*"
  AuroraDBCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      EnableCloudwatchLogsExports: 
        - !If [EnableDBLogExport, postgresql, !Ref 'AWS::NoValue']
      DatabaseName: !If [IsUseDBSnapshot, !Ref "AWS::NoValue", !Ref DBName]
      Port: !Ref DBPort
      MasterUsername:
        !If [IsUseDBSnapshot, !Ref "AWS::NoValue", !Join ['', ['{{resolve:secretsmanager:', !Ref AuroraMasterSecret, ':SecretString:username}}' ]]]
      MasterUserPassword:
        !If [IsUseDBSnapshot, !Ref "AWS::NoValue", !Join ['', ['{{resolve:secretsmanager:', !Ref AuroraMasterSecret, ':SecretString:password}}' ]]]
      DBSubnetGroupName: !Ref DBSubnetGroup
      VpcSecurityGroupIds:
      - !Ref ClusterSecurityGroup  
      BackupRetentionPeriod: !If [IsProd, 35, 7]
      DBClusterParameterGroupName: !Ref RDSDBClusterParameterGroup
      SnapshotIdentifier: !If [IsUseDBSnapshot, !Ref DBSnapshotId, !Ref "AWS::NoValue"]
      StorageEncrypted:  !If [IsUseDBSnapshot, !Ref "AWS::NoValue", true]
      EnableIAMDatabaseAuthentication: !If [DoEnableIAM, true, !Ref "AWS::NoValue"]
      Tags:
        -
          Key: EnvironmentId
          Value: !Ref EnvironmentId
        -
          Key: ProjectId
          Value: !Ref ProjectId
        -
          Key: ProjectIdVersion
          Value: !Ref ProjectIdVersion
        -
          Key: CostCenter
          Value: !Ref CostCenter
        -
          Key: Contact
          Value: !Ref Contact          
        -
          Key: Confidentiality
          Value: !Ref Confidentiality
        -
          Key: Compliance
          Value: !Ref Compliance
  AuroraDBFirstInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass:
        Ref: DBInstanceClass
      DBClusterIdentifier: !Ref AuroraDBCluster  
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      DBParameterGroupName:
        Ref: DBParamGroup
      MonitoringInterval: !If [IsProd, 1, 0]
      MonitoringRoleArn: !If [IsProd, !GetAtt MonitoringIAMRole.Arn, !Ref "AWS::NoValue"]
      AutoMinorVersionUpgrade: !If [IsProd, false, true]
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: !If [IsProd, 731, 7]
      Tags:
        -
          Key: EnvironmentId
          Value: !Ref EnvironmentId
        -
          Key: ProjectId
          Value: !Ref ProjectId
        -
          Key: ProjectIdVersion
          Value: !Ref ProjectIdVersion
        -
          Key: CostCenter
          Value: !Ref CostCenter
        -
          Key: Contact
          Value: !Ref Contact
        -
          Key: Confidentiality
          Value: !Ref Confidentiality
        -
          Key: Compliance
          Value: !Ref Compliance
  AuroraDBSecondInstance:
    Condition: IsReplica
    Type: AWS::RDS::DBInstance
    DependsOn: 
      - AuroraDBFirstInstance
    Properties:
      DBInstanceClass:
        Ref: DBInstanceClass
      DBClusterIdentifier: !Ref AuroraDBCluster  
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      DBParameterGroupName:
        Ref: DBParamGroup
      MonitoringInterval: !If [IsProd, 1, 0]
      MonitoringRoleArn: !If [IsProd, !GetAtt MonitoringIAMRole.Arn, !Ref "AWS::NoValue"]
      AutoMinorVersionUpgrade: !If [IsProd, false, true]
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: !If [IsProd, 731, 7]
      Tags:
        -
          Key: EnvironmentId
          Value: !Ref EnvironmentId
        -
          Key: ProjectId
          Value: !Ref ProjectId
        -
          Key: ProjectIdVersion
          Value: !Ref ProjectIdVersion
        -
          Key: CostCenter
          Value: !Ref CostCenter
        -
          Key: Contact
          Value: !Ref Contact
        -
          Key: Confidentiality
          Value: !Ref Confidentiality
        -
          Key: Compliance
          Value: !Ref Compliance
  CPUUtilizationAlarm1:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - Ref: DBSNSTopic
      AlarmDescription: 'CPU_Utilization'
      Dimensions:
      - Name: DBInstanceIdentifier
        Value:
          Ref: AuroraDBFirstInstance
      MetricName: CPUUtilization
      Statistic: Maximum
      Namespace: 'AWS/RDS'
      Threshold: 80
      Unit: Percent
      ComparisonOperator: 'GreaterThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  CPUUtilizationAlarm2:
    Condition: IsReplica
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - Ref: DBSNSTopic
      AlarmDescription: 'CPU_Utilization'
      Dimensions:
      - Name: DBInstanceIdentifier
        Value:
          Ref: AuroraDBSecondInstance
      MetricName: CPUUtilization
      Statistic: Maximum
      Namespace: 'AWS/RDS'
      Threshold: 80
      Unit: Percent
      ComparisonOperator: 'GreaterThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  MaxUsedTxIDsAlarm1:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - Ref: DBSNSTopic
      AlarmDescription: 'Maximum Used Transaction IDs'
      Dimensions:
      - Name: DBInstanceIdentifier
        Value:
          Ref: AuroraDBFirstInstance
      MetricName: 'MaximumUsedTransactionIDs'
      Statistic: Average
      Namespace: 'AWS/RDS'
      Threshold: 600000000
      Unit: Count
      ComparisonOperator: 'GreaterThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  MaxUsedTxIDsAlarm2:
    Condition: IsReplica
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - Ref: DBSNSTopic
      AlarmDescription: 'Maximum Used Transaction IDs'
      Dimensions:
      - Name: DBInstanceIdentifier
        Value:
          Ref: AuroraDBSecondInstance
      MetricName: 'MaximumUsedTransactionIDs'
      Statistic: Average
      Namespace: 'AWS/RDS'
      Threshold: 600000000
      Unit: Count
      ComparisonOperator: 'GreaterThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  FreeLocalStorageAlarm1:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - Ref: DBSNSTopic
      AlarmDescription: 'Free Local Storage'
      Dimensions:
      - Name: DBInstanceIdentifier
        Value:
          Ref: AuroraDBFirstInstance
      MetricName: 'FreeLocalStorage'
      Statistic: Average
      Namespace: 'AWS/RDS'
      Threshold: 5368709120
      Unit: Bytes
      ComparisonOperator: 'LessThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  FreeLocalStorageAlarm2:
    Condition: IsReplica
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - Ref: DBSNSTopic
      AlarmDescription: 'Free Local Storage'
      Dimensions:
      - Name: DBInstanceIdentifier
        Value:
          Ref: AuroraDBSecondInstance
      MetricName: 'FreeLocalStorage'
      Statistic: Average
      Namespace: 'AWS/RDS'
      Threshold: 5368709120
      Unit: Bytes
      ComparisonOperator: 'LessThanOrEqualToThreshold'
      Period: 60
      EvaluationPeriods: 5
      TreatMissingData: 'notBreaching'
  DatabaseClusterEventSubscription:
    Type: 'AWS::RDS::EventSubscription'
    Properties:
      EventCategories:
      - failover
      - failure
      - notification
      SnsTopicArn: !Ref DBSNSTopic
      SourceIds: [!Ref AuroraDBCluster]
      SourceType: 'db-cluster'
  DatabaseInstanceEventSubscription:
    Type: 'AWS::RDS::EventSubscription'
    Properties:
      EventCategories:
      - availability
      - configuration change
      - deletion
      - failover
      - failure
      - maintenance
      - notification
      - recovery
      SnsTopicArn: !Ref DBSNSTopic
      SourceIds: 
      - !Ref AuroraDBFirstInstance
      - !If [IsReplica, !Ref AuroraDBSecondInstance, !Ref "AWS::NoValue"]
      SourceType: 'db-instance'
  DBParameterGroupEventSubscription:
    Type: 'AWS::RDS::EventSubscription'
    Properties:
      EventCategories:
      - configuration change
      SnsTopicArn: !Ref DBSNSTopic
      SourceIds: [!Ref DBParamGroup]
      SourceType: 'db-parameter-group'
###############################################################################
# Outputs 
###############################################################################   
Outputs:
  ClusterEndpoint:
    Description: 'Aurora Cluster/Writer Endpoint'
    Value: !GetAtt 'AuroraDBCluster.Endpoint.Address'
    Export:
      Name: !Sub ${AWS::StackName}-rw
  ReaderEndpoint:
    Description: 'Aurora Reader Endpoint'
    Value: !GetAtt 'AuroraDBCluster.ReadEndpoint.Address'
    Export:
      Name: !Sub ${AWS::StackName}-ro
  ClusterSecurityGroupId:
    Description: Cluster Security Group ID
    Value: !Ref ClusterSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-sg
  Port:
    Description: 'Aurora Endpoint Port'
    Value: !GetAtt 'AuroraDBCluster.Endpoint.Port'
    Export:
      Name: !Sub ${AWS::StackName}-port
  DBUsername:
    Description: 'Database master username'
    Value: !Ref DBUsername
    Export:
      Name: !Sub ${AWS::StackName}-username
  DBName:
    Description: 'Database Name'
    Value: !Ref DBName
    Export:
      Name: !Sub ${AWS::StackName}-dbname
  PSQLCommandLine:    
    Description: PSQL Command Line
    Value: !Join
             - ''
             - - 'psql --host='
               - !GetAtt 'AuroraDBCluster.Endpoint.Address' 
               - ' --port='
               - !GetAtt 'AuroraDBCluster.Endpoint.Port'
               - ' --username='
               - !Ref DBUsername
               - ' --dbname='
               - !Ref DBName
    Export:
      Name: !Sub ${AWS::StackName}-psql
